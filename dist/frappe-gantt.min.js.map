{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/color_utils.js","../src/css_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre',\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre',\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık',\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月',\n    ],\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_names[lang][+values[1]],\n            MMM: month_names[lang][+values[1]],\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","const RGB_REGEX =\n    /^^(rgb)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\nconst HSL_REGEX =\n    /^^(hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\nconst HEX_REGEX = /^^#(?:[A-Fa-f0-9]{3}){1,2}$/;\n\nexport default {\n    isColor(value) {\n        return this.isRGB(value) || this.isHex(value) || this.isHSL(value);\n    },\n\n    isRGB(value) {\n        return RGB_REGEX.test(value);\n    },\n\n    isHSL(value) {\n        return HSL_REGEX.test(value);\n    },\n\n    isHex(value) {\n        return HEX_REGEX.test(value);\n    },\n};\n","export default {\n    getCssVariable(\n        variable,\n        element = document.documentElement,\n        defaultValue = ''\n    ) {\n        var value, elementStyles;\n\n        // Allow query selectors and HTMLElements\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        } else if (element instanceof HTMLElement === false) {\n            return defaultValue;\n        }\n\n        elementStyles = window.getComputedStyle(element) || null;\n\n        if (!variable || !elementStyles) {\n            return defaultValue;\n        }\n\n        value = elementStyles.getPropertyValue(variable);\n\n        return value;\n    },\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\nimport color_utils from './color_utils';\nimport css_utils from './css_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n\n        // Customization of bar colours\n        this.bar_color = this.check_color_variable(this.task.colors.bar || '');\n        this.progress_color = this.check_color_variable(\n            this.task.colors.progress || ''\n        );\n        this.text_color = this.check_color_variable(\n            this.task.colors.text || ''\n        );\n    }\n\n    check_color_variable(value) {\n        if (color_utils.isColor(value)) {\n            return value;\n        } else if (css_utils.getCssVariable(value)) {\n            return value;\n        } else {\n            return false;\n        }\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        // Override fill\n        if (this.bar_color) {\n            this.$bar.style.fill = this.bar_color;\n        }\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n\n        // Override fill\n        if (this.progress_color) {\n            this.$bar_progress.style.fill = this.progress_color;\n        }\n    }\n\n    draw_label() {\n        this.$label = createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            fill: this.text_color,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n\n        if (this.text_color) {\n            this.$label.style.fill = this.text_color;\n        }\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group,\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group,\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group,\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second'),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            if (!task.colors) {\n                task.colors = {};\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (\n                this.view_is(VIEW_MODE.MONTH) &&\n                (date.getMonth() + 1) % 3 === 0\n            ) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","ru","ptBr","fr","tr","zh","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","RGB_REGEX","HSL_REGEX","HEX_REGEX","color_utils","isColor","isRGB","isHex","isHSL","test","css_utils","getCssVariable","variable","documentElement","defaultValue","elementStyles","HTMLElement","window","getComputedStyle","getPropertyValue","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","bar_color","check_color_variable","colors","bar","progress_color","text_color","text","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","style","fill","classList","$bar_progress","$label","requestAnimationFrame","update_label_position","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","clientWidth","position_meta","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}